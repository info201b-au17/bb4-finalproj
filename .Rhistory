l
/
)
''
)
1
1
1
s
dcd
c
``
``
View(representative.About)
representative.About
Age <- select(representative.About$results, date_of_birth) - Sys.Date()
realage <- age - Sys.Date()
realage <- Age - Sys.Date()
Age <- select(representative.About$results, date_of_birth)
realage <- Age - Sys.Date()
Age <- mutate(representative.About$results, age = date_of_birth - Sys.Date())
twitter <- select(representative.About$results, twitter_account)
pct <- select(representative.About$roles, votes_with_party_pct)
pct <- select(representative.About$roles, votes_with_party_pct)
representative.About
birthday <- select(representative.About$results, twitter_account)
todays <- Sys.Date;
age <- todays - format.Date(birthday)
todays
birthday
birth <- select(representative.About$results, date_of_birth)
todays <- Sys.Date;
birth
todays
todays <- Sys.Date();
todays
age <- todays - format.Date(birth)
format.Date(birth)
format.Date(birth)
birth
age <- todays - birth
as.date(birth, "%m/%d/%y")
todays
as.date(birth, "%y/%m/%d")
as.Date(birth, "%y/%m/%d")
as.Date(df$birth, "%y/%m/%d")
age <- todays - as.Date(df$birth, "%m/%d/%Y")
google.answer
as.Date(df$birth, "%m/%d/%Y")
as.Date(birth)
as.Date(birth, "%m/%d/%Y")
Date(birth, "%m/%d/%Y")
birth
Date(birth, "%m-%d-%Y")
as.Date(birth, "%m-%d-%Y")
age <- todays - birth
ggplot(All_representative, aes(results.gender)) + coord_flip()
ggplot(All_representative, aes(results$gender)) + coord_flip()
url_base2 <- "https://api.propublica.org/congress"
path2 <- "/v1/members/house/WA/current.json"
full_path2 <- paste0(url_base2, path2)
representativeResults <- GET(full_path2,httr::add_headers("X-API-Key"=propublica.key ))
representative.answer <- fromJSON(content(representativeResults,"text"))
representative.answer
ggplot(representative.answer, aes(results$gender)) + coord_flip()
ggplot(representative.answer, aes(gender)) + coord_flip()
View(representative.answer)
ggplot(representative.answer, aes(results.gender)) + coord_flip()
graph1 <- as.data.frame(representative.answer)
ggplot(graph1, aes(results.gender)) + coord_flip()
graph1
ggplot(graph1, aes(results.party,)) + coord_flip()
name <- select(representative.About$results, first_name, last_name)
twitter <- select(representative.About$results, twitter_account)
google.officials <- as.data.frame(oogle.officials)
position <- as.data.frame(position)
officials_table <- merge(position,google.officials)
officials_table
View(officials_table)
Mydata <- read.csv("~/Documents/info201/a6-server-Moraa0599/temp_prec_1960+.csv.bz2")
Mydata <- read.csv("~/Documents/info201/a6-server-Moraa0599/temp_prec_subset.csv.bz2")
View(Mydata)
north_America <- filter(Mydata, latitude > 20 & latitude < 90, longitude > 180 & longitude < 300)
north_America <- filter(Mydata, latitude > 20 & latitude < 90 & longitude > 180 & longitude < 300)
north_America <- filter(Mydata, latitude > 20 & latitude < 90 )
north_America <- filter(Mydata, latitude > 20  )
north_America <- filter(Mydata, 'latitude' > 20 & 'latitude' < 90, 'longitude' > 180 & 'longitude' < 300)
north_America <- filter(Mydata, latitude > '20' & latitude < '90', longitude > '180' & longitude < '300')
north_America <- filter(Mydata, latitude > '20' & latitude < '90')
north_America <- filter(Mydata, latitude > '20' )
north_America <- filter(Mydata, latitude > 20 )
north_America <- filter(Mydata, Latitude > 20 )
north_America <- filter(Mydata, latitude > 20 )
north_America <- filter(Mydata, latitude > 20 )
dataSub <- as.data.frame(Mydata)
dataSub
north_America <- filter(dataSub, latitude > 20 )
library("dplyr", lib.loc="~/Library/R/3.2/library")
north_America <- filter(Mydata, latitude > 20 )
north_America <- filter(Mydata, latitude > 20 )
north_America <- filter(Mydata, latitude > 20 & latitude < 90, longitude > 180 & longitude < 300)
north_America
year1960 <- filter(Mydata, time %in% '1960-01-01 ')
year1960
year1960 <- filter(Mydata,'1960-01-01 ' %in% time)
year1960
year1960 <- filter(Mydata, time = '1960-01-01 ' )
year1960 <- filter(Mydata, time == '1960-01-01 ' )
year1960
year1960 <- filter(Mydata, time == 1960-01-01 )
year1960
year1960 <- filter(Mydata, time == '1960-01-01' )
year1960
year1960 <- filter(Mydata, time %in% '1960-01-01' )
year1960
year1960 <- filter(Mydata, time %in% '1960' )
year1960
year1960 <- filter(Mydata, 1960 %in% year )
year1960 <- filter(Mydata, 1960 %in% time )
year1960
year1960 <- filter(Mydata, '1960' %in% time )
year1960
year1960 <- filter(Mydata, time %in% '1960-01-01')
year1960
year1960 <- filter(north_America, time %in% '1960-01-01')
year1960
library("magrittr", lib.loc="~/Library/R/3.2/library")
year1960 <- filter(north_America, time %in% '1960')
year1960
year1960 <- filter(north_America, time %in% year('1960'))
year1960 <- filter(north_America, time >= '1960-01-01' & time <= '1960-12-31')
year1960 <- filter(north_America, time =< '1960-01-01' & time =< '1960-12-31')
year1960 <- filter(north_America, time >= '1960-01-01' & time <= '1960-12-31')
year1960 <- filter(north_America, time >= 1960-01-01 & time <= 1960-12-31)
year1960 <- filter(north_America, time %in% 1960-01-01)
year1960 <- filter(north_America, time %in% '1960-01-01')
year1960
ggplot(year1960,aes(longitude, latitude))+ coord_map()
library("ggplot2", lib.loc="~/Library/R/3.2/library")
ggplot(year1960,aes(longitude, latitude))+ coord_map()
year1960 <- filter(north_America, time %in% '1960-01-01')
year1960
ggplot(year1960,aes(longitude, latitude))+ coord_map()
library("mapdata", lib.loc="~/Library/R/3.2/library")
ggplot(year1960,aes(longitude, latitude))+ coord_map()
install.packages("mapproj")
library("mapproj", lib.loc="~/Library/R/3.2/library")
ggplot(year1960,aes(longitude, latitude))+ coord_map()
ggplot(year1960,aes(longitude, latitude))+ coord_map(precipitation)
ggplot(year1960,aes(longitude, latitude))+ coord_map(aes(precipitation))
ggplot(year1960,aes(longitude, latitude))+ coord_map(aes(col=precipitation))
ggplot(year1960,aes(longitude, latitude))+ coord_map(aes(col = precipitation))
ggplot(year1960,aes(longitude, latitude))+ geom_point(fill = 'white', colour = 'blue')+ coord_map()
ggplot(year1960,aes(longitude, latitude))+ geom_point( aes(col=precipitation )fill = 'white', colour = 'blue') + coord_map()
ggplot(year1960,aes(longitude, latitude))+ geom_point( aes(col=precipitation) fill = 'white', colour = 'blue') + coord_map()
ggplot(year1960 = precipitation ,aes(longitude, latitude))
+ geom_point( aes(col=precipitation) fill = 'white', colour = 'blue') + coord_map()
ggplot(year1960 = precipitation ,aes(longitude, latitude))+ geom_point( aes(col=precipitation) fill = 'white', colour = 'blue') + coord_map()
ggplot(year1960,aes(longitude, latitude))+ geom_point( aes(precipitation) fill = 'white', colour = 'blue') + coord_map()
north_America <- filter(Mydata, latitude > 20 & latitude < 90, longitude > 180 & longitude < 300)
year1960 <- filter(north_America, time %in% '1960-01-01')
ggplot(year1960,aes(longitude, latitude))+ geom_point( aes(precipitation) fill = 'white', colour = 'blue') + coord_map()
ggplot(year1960,aes(longitude, latitude))+ geom_point(fill = 'white', colour = 'blue') + coord_map()
ggplot(year1960,aes(longitude, latitude))+ geom_point(colour = 'blue') + coord_map()
ggplot(year1960,aes(longitude, latitude))+ geom_point(colour = 'black') + coord_map()
ggplot(year1960,aes(longitude, latitude))+ geom_point(aes(col=precipitation),colour = 'black') + coord_map()
ggplot(year1960,aes(longitude, latitude))+ geom_point(aes(precipitation),colour = 'black') + coord_map()
ggplot(year1960,aes(longitude, latitude))+ geom_point(aes(col=precipitation),colour = 'black') + coord_map()
ggplot(year1960,aes(longitude, latitude))+ geom_point(aes(col=precipitation),colour = 'black', alpha=0.1, size=0.1) + coord_map()
ggplot(year1960,aes(longitude, latitude,precipitation))+ geom_point(colour = 'black') + coord_map()
ggplot(year1960,aes(longitude, latitude, fill = precipitation))+ geom_point(colour = 'black') + coord_map()
ggplot(year1960,aes(longitude, latitude,))+ geom_point(data = year1960 ,colour = 'black') + coord_map()
ggplot(data = year1960,aes(longitude, latitude,))+ geom_point(colour = 'black') + coord_map()
ggplot(aes(longitude, latitude,))+ geom_point(colour = 'black') + coord_map()
ggplot(year1960,aes(longitude, latitude,)) + coord_map()
ggplot(year1960,aes(longitude, latitude,)) + coord_map()+ geom_point()
ggplot(year1960,aes(longitude, latitude)) + coord_map()+ geom_point()
ggplot(data = year1960,aes(longitude, latitude)) + coord_map()+ geom_point()
ggplot(data = year1960) + coord_map()+ geom_point(aes(longitude, latitude, shape=precipitation))
ggplot(data = year1960) + coord_map()+ geom_point(mapping = aes(xlongitude, latitude, shape=precipitation))
ggplot(data = year1960) + coord_map()+ geom_point(mapping = aes(x = longitude, y = latitude, shape=precipitation))
ggplot(data = year1960)+ geom_point(mapping = aes(x = longitude, y = latitude, shape=precipitation)) + coord_map()
ggplot(data = year1960)+ geom_point(mapping = aes(x = longitude, y = latitude, shape = precipitation)) + coord_map()
ggplot(data = year1960)+ geom_point(mapping = aes(x = longitude, y = latitude)) + coord_map()
year1960
ggplot(data = year1960)+ geom_point(mapping = aes(x = longitude, y = latitude, group = precipitation)) + coord_map()
ggplot(data = year1960)+ geom_point(mapping = aes(x = longitude, y = latitude, precipitation = precipitation)) + coord_map()
year1960 <- filter(north_America, time %in% '1960-01-01')
year1987 <- filter(north_America,time %in% '1987-01-01')
year2014 <- filter(north_America,time %in% '2014-01-01')
ggplot(data = year1960)+ geom_point(mapping = aes(x = longitude, y = latitude)) + coord_map()
ggplot(data = year1960)+ geom_point(mapping = aes(x = longitude, y = latitude)) + coord_map()
data1960 <-  select(year1960,longitude,latitude,precipitation)
ggplot(data = data1960)+ geom_point(mapping = aes(x = longitude, y = latitude)) + coord_map()
ggplot(data = data1960,aes(longitude,latitude))+ geom_point() + coord_map()
data1960
ggplot(data = data1960,aes(longitude,latitude))+ geom_point() + coord_map()
ggplot(data = year1960,aes(longitude,latitude))+ geom_point(color = precipitation) + coord_map()
ggplot(data = year1960,aes(longitude,latitude)) + geom_point(color = airtemp) + coord_map()
ggplot(data = year1960,aes(longitude,latitude)) + geom_point(color = 'airtemp') + coord_map()
ggplot(data = year1960,aes(longitude,latitude)) + geom_point(color = ('airtemp') + coord_map()
sd
ggplot(data = year1960,aes(longitude,latitude)) + geom_point(color = ('airtemp')) + coord_map()
year1960
year1960 <- filter(north_America, time %in% '1960-01-01') % filter(airtemp != NA)
year1960 <- filter(north_America, time %in% '1960-01-01') % filter(airtemp != 'NA')
year1960 <- filter(north_America, time %in% '1960-01-01') %>% filter(airtemp != 'NA')
year1960
ggplot(data = year1960,aes(longitude,latitude)) + geom_point(color = airtemp) + coord_map()
ggplot(data = year1960,aes(longitude,latitude)) + geom_point() + coord_map()
year1960 <- filter(north_America, time %in% '1960-01-01') %>% filter(airtemp != 'NA')
year1987 <- filter(north_America,time %in% '1987-01-01') %>% filter(airtemp != 'NA')
year2014 <- filter(north_America,time %in% '2014-01-01') %>% filter(airtemp != 'NA')
data1960 <- select(year1960,longitude,latitude,airtemp)
ggplot(data = data1960,aes(longitude,latitude)) + geom_point() + coord_map()
data1960
ggplot(data = data1960,aes(longitude,latitude)) + geom_point(color ='blue') + coord_map()
data1960 <- select(year1960,longitude,latitude,precipitation)
ggplot(data = data1960,aes(longitude,latitude)) + geom_point(color ='blue') + coord_map()
ggplot(data = year1960,aes(longitude,latitude)) + geom_point(color ='blue') + coord_map()
ggplot(data = year1960,aes(longitude,latitude)) + geom_point(color = precipitation) + coord_map()
year1960
ggplot(data = year1960,aes(longitude,latitude)) + geom_point(color = precipitation) + coord_map()
ggplot(data = year1960,aes(longitude,latitude)) + geom_point(aes(color = precipitation)) + coord_map()
ggplot(data = year1960,aes(longitude,latitude)) + geom_point(aes(color = airtemp)) + coord_map()
ggplot(data = year1960,aes(longitude,latitude)) + geom_point(aes(color = precipitation)) + coord_map() + labs(title = "precipitation, 1960")
ggplot(data = year1960,aes(longitude,latitude)) + geom_point(aes(color = precipitation)) + coord_map() + labs(title = "Precipitation, 1960")
ggplot(data = year1960,aes(longitude,latitude)) + geom_point(aes(color = airtemp)) + coord_map() + labs(title = "airtemp, 1960")
ggplot(data = year1960,aes(longitude,latitude)) + geom_point(aes(color = airtemp)) + coord_map() + labs(title = "Airtemp, 1960")
ggplot(data = year1960,aes(longitude,latitude)) + geom_point(aes(color = red ,color = precipitation)) + coord_map() + labs(title = "Precipitation, 1960")
ggplot(data = year1960,aes(longitude,latitude)) + geom_point(aes(color = 'red' ,color = precipitation)) + coord_map() + labs(title = "Precipitation, 1960")
ggplot(data = year1960,aes(longitude,latitude)) + geom_point(aes(color = precipitation),color = 'red') + coord_map() + labs(title = "Precipitation, 1960")
ggplot(data = year1960,aes(longitude,latitude)) + geom_point(aes(color = precipitation)) + coord_map() + labs(title = "Precipitation, 1960")
ggplot(data = year1960,aes(longitude,latitude)) + geom_point(aes(color = airtemp)) + coord_map() + labs(title = "Airtemp, 1960")
ggplot(data = year1987,aes(longitude,latitude)) + geom_point(aes(color = precipitation)) + coord_map() + labs(title = "Precipitation, 1987")
library(bindrcpp)
library(dplyr)
library(ggplot2)
library(magrittr)
library(mapdata)
library(mapproj)
library(maps)
install.packages(tidyverse)
Mydata <- read.table("pbzcar/opt/data/temp_prec_selected_years.csv.bz2")
install.packages("jpeg")
library("jpeg", lib.loc="~/Library/R/3.2/library")
install.packages("tidyverse")
library("tidyverse", lib.loc="~/Library/R/3.2/library")
SelectByLocation <- function(latDegree,lngDegree) {
locationUFO <- UFO_dataset %>% select(lat = latDegree & lng = lngDegree)
return(locationUFO)
}
SelectByLocation <- function(latDegree,lngDegree) {
locationUFO <- UFO_dataset %>% select(lat == latDegree & lng == lngDegree)
return(locationUFO)
}
View(UFO_dataset)
View(UFO_dataset)
UFO_dataset <- read.csv("data/UFOCoords.csv")
View(UFO_dataset)
test1 <- SelectByLocation("38.06523","-78.90589")
test1 <- SelectByLocation(38.06523,-78.90589)
SelectByLocation <- function(latDegree,lngDegree) {
locationUFO <- UFO_dataset %>% select(lat == latDegree & lng == lngDegree)
return(locationUFO)
}
test1 <- SelectByLocation(38.06523,-78.90589)
source("scripts/chart1.R")
test1 <- SelectByLocation(38.06523,-78.90589)
test1 <- SelectByLocation(38.06523,-78.90589)
library(shiny)
ui <- fluidPage(
mainPanel(
textInput("response", label="say something.", "hello"),
textOutput("comments")
)
)
server <- function(input,output) {
output$comment <- renderText({
paste("you said:", input$response)
})
}
shinyApp(ui = ui, server = server)
library(shiny)
ui <- fluidPage(
mainPanel(
textInput("observation", label="observations", "choose observation"),
textInput("color", label = "color","choose color")
textOutput("comments")
)
)
server <- function(input,output) {
output$comment <- renderText({
paste("you said:", input$response)
})
}
shinyApp(ui = ui, server = server)
library(shiny)
ui <- fluidPage(
mainPanel(
textInput("observation", label="observations", "choose observation"),
textInput("color", label = "color","choose color")
textOutput("comments")
)
)
server <- function(input,output) {
output$comment <- renderText({
paste("you said:", input$response)
})
}
shinyApp(ui = ui, server = server)
summary_function <- function(dataset) {
returnData <- list()
returnData$loadTest <- "summary script loaded in correctly"
returnData$totalCount <- nrow(dataset)
returnData$dateRange <- paste(dataset$Date[1], "to", dataset$Date[returnData$totalCount])
returnData$numberSightingsUSA <- sum(dataset$Country == "USA")
latOrder <- dataset[order(dataset$lat),] ## order by latitude
lngOrder <- dataset[order(dataset$lng),] ## order by longitude
returnData$latRange <- paste(round(latOrder$lat[1],digits=2), "to", round(latOrder$lat[returnData$totalCount],digits=2))
returnData$lngRange <- paste(round(lngOrder$lng[1],digits=2), "to", round(lngOrder$lng[returnData$totalCount],digits=2))
return(returnData)
}
data_summary <- summary_function(UFO_dataset)
UFO_dataset <- read.csv("data/UFOCoords.csv")
data_summary <- summary_function(UFO_dataset)
source("scripts/summary.R")
data_summary <- summary_function(UFO_dataset)
data_summary
view (UFO_dataset)
View(UFO_dataset)
chart1 <- function(dataset) {
returnPlot <- ggplot(data = dataset, aes(lat, lng))
return(returnPlot)
}
returnPlot
chart1 <- function(dataset) {
returnPlot <- ggplot(data = dataset, aes(lat, lng)) + geom_point()
return(returnPlot)
}
returnPlot
View(returnPlot)
chart1 <- function(dataset) {
returnPlot <- ggplot(data = dataset, aes(lat, lng)) + geom_point()
return(returnPlot)
}
data_chart1 <- chart1(UFO_dataset)
library("dplyr", lib.loc="~/Library/R/3.2/library")
library("ggplot2", lib.loc="~/Library/R/3.2/library")
data_chart1 <- chart1(UFO_dataset)
data_chart1
chart1 <- function(dataset) {
returnPlot <- ggplot(data = dataset, aes(shape, Count)) + geom_col()
return(returnPlot)
}
data_chart1 <- chart1(UFO_dataset)
data_chart1
data_chart1 <- chart1(UFO_dataset)
chart1 <- function(dataset) {
returnPlot <- ggplot(data = dataset, aes(shape)) + geom_col()
return(returnPlot)
}
data_chart1 <- chart1(UFO_dataset)
data_chart1
chart1 <- function(dataset) {
returnPlot <- ggplot(data = dataset, aes(Shape)) + geom_col()
return(returnPlot)
}
data_chart1 <- chart1(UFO_dataset)
data_chart1
## Create chart 1
chart1 <- function(dataset) {
returnPlot <- ggplot(data = dataset, aes(Shape)) + geom_col()+ geom_text(stat='bin',aes(label=..count..),vjust=-1)
return(returnPlot)
}
data_chart1 <- chart1(UFO_dataset)
data_chart1
chart1 <- function(dataset) {
returnPlot <- ggplot(data = dataset, aes(Shape)) + geom_col()
return(returnPlot)
}
data_chart1 <- chart1(UFO_dataset)
data_chart1
chart1 <- function(dataset) {
returnPlot <- ggplot(data = dataset, aes(Shape,count) + geom_col()
return(returnPlot)
}
chart1 <- function(dataset) {
returnPlot <- ggplot(dataset, aes(Shape, Stat="count"))+geom_bar()
return(returnPlot)
}
data_chart1 <- chart1(UFO_dataset)
data_chart1
## Create chart 1
chart1 <- function(dataset) {
returnPlot <- ggplot(dataset, aes(Shape, Stat="count"))+geom_bar()+ggtitle("Number Of Times UFO Shapes Been Seen is center")
return(returnPlot)
}
data_chart1 <- chart1(UFO_dataset)
data_chart1
## Create chart 1
chart1 <- function(dataset) {
returnPlot <- ggplot(dataset, aes(Shape, Stat="count"))+geom_bar()+ggtitle("Number Of Times UFO Shapes Been Seen")
return(returnPlot)
}
data_chart1 <- chart1(UFO_dataset)
data_chart1
chart1 <- function(dataset) {
returnPlot <- ggplot(dataset, aes(Shape, Stat="count", fill=Shape))+guides(fill=FALSE)+geom_bar()+ggtitle("Count of different UFO shapes seen")+theme(axis.text.x = element_text(angle=45, hjust=1), plot.title=element_text(hjust=0.5))
return(returnPlot)
}
chart1 <- function(dataset) {
returnPlot <- ggplot(dataset, aes(Shape, Stat="count", fill=Shape))+guides(fill=FALSE)+geom_bar()+ggtitle("Count of different UFO shapes seen")+theme(axis.text.x = element_text(angle=45, hjust=1), plot.title=element_text(hjust=0.5))
return(returnPlot)
}
data_chart1 <- chart1(UFO_dataset)
library("ggplot2", lib.loc="~/Library/R/3.2/library")
data_chart1 <- chart1(UFO_dataset)
data_chart1
install.packages("rvest")
library("rvest", lib.loc="~/Library/R/3.2/library")
cran <- read_html("https://cran.r-project.org")
cran
cran %>%  html_structure()
cran %>% html_node("head")
cran %>% html_node("head") %>% html_text()
cran %>% html_node("frameset")
cran %>% html_node("head") %>% html_text()
cran %>% html_node("frameset") %>% html_text()
# This file loads in data and writes the data to a local csv file so there's only one calculation
updateData <- function() {
# Load in bike data
bikeTheftData <- read.csv("data/testDatasets/stolen_bikes.csv") %>% select(Latitude, Longitude, Year)
bikeRackData <- read.csv("data/testDatasets/bike_racks.csv") %>% select(LATITUDE, LONGITUDE, CONDITION)
# Constants
radiusSensitivity <- 0.004 # Radius of bike thefts that will be considered for a bike rack, in units of lat/long
yearThreshold <- as.numeric(format(Sys.Date(),'%Y')) - 2 # Gets theft activity from the past two years
# Add count of thefts near bike rack
# VERY SLOW PROCESS! Have to optimize or find a way around looping through entire dataset
# IDEA: Only grab theft data when CLICKING on the point on the map
# IDEA: Calculate nearby theft data as well to determine best spot to park
getTheftCount <- function(latIn, longIn) {
returnCount <- bikeTheftData %>%
filter(abs(Latitude-(latIn)) < radiusSensitivity &
abs(Longitude-longIn) < radiusSensitivity &
Year >= yearThreshold) %>%
nrow()
return(returnCount)
}
bikeRackData$THEFTCOUNT <- NA
for(i in 1:nrow(bikeRackData)) {
bikeRackData$THEFTCOUNT[i] <- getTheftCount(bikeRackData$LATITUDE[i], bikeRackData$LONGITUDE[i])
}
write.csv(bikeRackData, file="data/testDatasets/bike_racks.csv")
}
shiny::runApp('Documents/info201/bb4-finalproj')
install.packages("shinydashboard")
runApp('Documents/info201/bb4-finalproj')
install.packages("leaflet")
runApp('Documents/info201/bb4-finalproj')
install.packages("googleVis")
runApp('Documents/info201/bb4-finalproj')
runApp('Documents/info201/bb4-finalproj')
runApp('Documents/info201/bb4-finalproj')
runApp('Documents/info201/bb4-finalproj')
install.packages("devtools")
library("devtools", lib.loc="~/Library/R/3.2/library")
library("dbplyr", lib.loc="~/Library/R/3.2/library")
rsconnect::setAccountInfo(name='moraa0599', token='A90CB99D2FC204D7190599E3317079DA', secret='QZsKnh0l07PzHjiZmj3u00iLU+YD5x+y0uQx8wII')
runApp()
install.packages("shinyapps")
deploy
deployApp()
install.packages(c("glue", "hms", "openssl", "Rcpp", "rmarkdown", "stringi", "withr"))
install.packages(c("glue", "hms", "openssl", "Rcpp", "rmarkdown", "stringi", "withr"))
install.packages(c("glue", "hms", "openssl", "Rcpp", "rmarkdown", "stringi", "withr"))
install.packages(c("glue", "hms", "openssl", "Rcpp", "rmarkdown", "stringi", "withr"))
install.packages(c("glue", "hms", "openssl", "Rcpp", "rmarkdown", "stringi", "withr"))
install.packages(c("glue", "hms", "openssl", "Rcpp", "rmarkdown", "stringi", "withr"))
install.packages(c("glue", "hms", "openssl", "Rcpp", "rmarkdown", "stringi", "withr"))
install.packages(c("glue", "hms", "openssl", "Rcpp", "rmarkdown", "stringi", "withr"))
install.packages(c("glue", "hms", "openssl", "Rcpp", "rmarkdown", "stringi", "withr"))
install.packages(c("glue", "hms", "openssl", "Rcpp", "rmarkdown", "stringi", "withr"))
install.packages(c("glue", "hms", "openssl", "Rcpp", "rmarkdown", "stringi", "withr"))
rsconnect::deployApp('~/Documents/info201/a8-shiny-Moraa0599/cerearlapp')
rsconnect::deployApp('~/Documents/info201/a8-shiny-Moraa0599')
rsconnect::deployApp('~/Documents/info201/a8-shiny-Moraa0599/cerearlapp')
rsconnect::deployApp('~/Documents/info201/a8-shiny-Moraa0599/cerearlapp')
rsconnect::deployApp('~/Documents/info201/a8-shiny-Moraa0599/cerearlapp')
rsconnect::deployApp('~/Documents/info201/a8-shiny-Moraa0599/cerearlapp')
rsconnect::deployApp('~/Documents/info201/a8-shiny-Moraa0599/cerearlapp')
find_rtools()
library("devtools", lib.loc="~/Library/R/3.2/library")
rsconnect::deployApp('~/Documents/info201/a8-shiny-Moraa0599/cerearlapp')
find_rtools()
shiny::runApp('Documents/info201/a8-shiny-Moraa0599/cerearlapp')
rsconnect::deployApp('~/Documents/info201/a8-shiny-Moraa0599/cerearlapp')
rsconnect::deployApp('~/Documents/info201/a8-shiny-Moraa0599/cerearlapp')
rsconnect::deployApp('~/Documents/info201/a8-shiny-Moraa0599/cerearlapp')
rsconnect::deployApp('~/Documents/info201/a8-shiny-Moraa0599/cerearlapp')
library("crayon", lib.loc="~/Library/R/3.2/library")
rsconnect::deployApp('~/Documents/info201/a8-shiny-Moraa0599/cerearlapp')
rsconnect::deployApp('~/Documents/info201/a8-shiny-Moraa0599/cerearlapp')
rsconnect::deployApp('~/Documents/info201/a8-shiny-Moraa0599/cerearlapp')
rsconnect::deployApp('~/Documents/info201/a8-shiny-Moraa0599/cerearlapp')
rsconnect::deployApp('~/Documents/info201/a8-shiny-Moraa0599/cerearlapp')
rsconnect::deployApp('~/Documents/info201/a8-shiny-Moraa0599/cerearlapp')
runApp('Documents/info201/a8-shiny-Moraa0599/cerearlapp')
shiny::runApp('Documents/info201/a8-shiny-Moraa0599/cerearlapp')
runApp('Documents/info201/bb4-finalproj')
install.packages("shinyjs")
runApp('Documents/info201/bb4-finalproj')
